{"version":3,"sources":["Tours.jsx","App.js","reportWebVitals.js","index.js"],"names":["Tour","id","image","info","name","price","ButtonHandler","useState","readMore","setReadMore","ToggleHandler","prevState","information","className","onClick","slice","src","alt","title","width","aria-label","Tours","data","map","element","key","App","Data","setData","loading","setLoading","FetchData","axios","get","then","response","useEffect","Output","length","NewList","filter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yPAYMA,EAAO,SAAC,GAAsD,IAApDC,EAAmD,EAAnDA,GAAIC,EAA+C,EAA/CA,MAAOC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,cAAqB,EAC/BC,oBAAS,GADsB,mBACxDC,EADwD,KAC9CC,EAD8C,KAGzDC,EAAgB,WAClBD,GAAY,SAAAE,GAAS,OAAKA,MAE1BC,EAAc,IAWlB,OATIA,EADAJ,EAEI,oBAAGK,UAAU,cAAb,oBAA+BV,GAA/B,IAAuC,sBAAMW,QAAS,kBAAMJ,KAArB,2BAKvC,oBAAGG,UAAU,cAAb,oBAA+BV,EAAKY,MAAM,EAAG,MAA7C,IAAqD,sBAAMD,QAAS,kBAAMJ,KAArB,2BAIzD,0BAASG,UAAU,OAAnB,UACI,qBAAKG,IAAKd,EAAOe,IAAKb,EAAMc,MAAOd,EAAMe,MAAM,SAC/C,8BACI,mCAAK,+BAAOf,IAAZ,IAAyB,sBAAMS,UAAW,QAAjB,mBAA6BR,EAA7B,aAE5BO,EACD,wBAAQC,UAAU,eAAeC,QAAS,kBAAMR,EAAcL,IAAKmB,aAAW,gBAA9E,mCAMGC,EAxCD,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,KAAMhB,EAAoB,EAApBA,cACnB,OACIgB,EAAKC,KAAI,SAACC,GACN,OACI,wBAAC,EAAD,2BAAUA,GAAV,IAAmBlB,cAAeA,EAAemB,IAAKD,EAAQvB,UCkD/DyB,EAhDH,WAAO,IAAD,EACQnB,mBAAS,IADjB,mBACToB,EADS,KACHC,EADG,OAEcrB,oBAAS,GAFvB,mBAETsB,EAFS,KAEAC,EAFA,KAIVC,EAAY,WAChBC,IAAMC,IAPE,8CAOOC,MAAK,SAACC,GACnBP,EAAQO,EAASb,MACjBQ,GAAW,OAIfM,qBAAU,WACRL,MACC,IAGH,IAKIM,EAAS,KAoBb,OAlBEA,EADER,EACO,qBAAKhB,UAAU,cAAcO,aAAY,iBAAzC,+BAEc,IAAhBO,EAAKW,OAEV,qCACE,qBAAKzB,UAAU,cAAf,uCACA,wBAAQA,UAAU,eAAeC,QAAWiB,EAAWX,aAAY,kBAAnE,yBAMF,qCACE,oBAAIP,UAAU,cAAd,yBACA,cAAC,EAAD,CAAOS,KAAMK,EAAMrB,cArBH,SAACL,GACrB,IAAIsC,EAAUZ,EAAKa,QAAO,SAAAhB,GAAO,OAAIA,EAAQvB,KAAOA,KACpD2B,EAAQW,SAwBR,+BACGF,KCvCQI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBT,MAAK,YAAkD,IAA/CU,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.4e9d58c3.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useState } from \"react\";\r\nconst Tours = ({ data, ButtonHandler }) => {\r\n    return (\r\n        data.map((element) => {\r\n            return (\r\n                <Tour {...element} ButtonHandler={ButtonHandler} key={element.id} />\r\n            )\r\n        })\r\n    )\r\n}\r\n\r\nconst Tour = ({ id, image, info, name, price, ButtonHandler, }) => {\r\n    const [readMore, setReadMore] = useState(false);\r\n\r\n    const ToggleHandler = () => {\r\n        setReadMore(prevState => !prevState);\r\n    }\r\n    let information = \" \";\r\n    if (readMore) {\r\n        information = (\r\n            <p className=\"Information\">{`${info}`} <span onClick={() => ToggleHandler()}> Show More</span></p>\r\n        )\r\n    }\r\n    else {\r\n        information = (\r\n            <p className=\"Information\">{`${info.slice(0, 150)}`} <span onClick={() => ToggleHandler()}> Show less</span></p>\r\n        )\r\n    }\r\n    return (\r\n        <article className=\"Card\">\r\n            <img src={image} alt={name} title={name} width=\"100%\"/>\r\n            <div>\r\n                <h2> <span>{name}</span> <span className =\"Price\">{`${price} $`}</span></h2>\r\n            </div>\r\n            {information}\r\n            <button className=\"ButtonDanger\" onClick={() => ButtonHandler(id)} aria-label=\"Not Intersted\"> Not Intersted ! </button>\r\n        </article>\r\n    )\r\n}\r\n\r\n\r\nexport default Tours;","import './App.css';\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport Tours from \"./Tours\";\n\n\nconst URL = 'https://course-api.com/react-tours-project';\n\nconst App = () => {\n  const [Data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  const FetchData = ()=>{\n    axios.get(URL).then((response) => {\n      setData(response.data);\n      setLoading(false)\n    })\n  }\n\n  useEffect(() => {\n    FetchData();\n  }, [])\n\n\n  const ButtonHandler = (id) => {\n    let NewList = Data.filter(element => element.id !== id);\n    setData(NewList);\n  }\n\n  let Output = null;\n  if (loading) {\n    Output = <div className=\"MainHeading\" aria-label =\"Loading ....!!\"> Loading..... !! </div>\n  }\n  else if (Data.length === 0) {\n    Output = (\n      <>\n        <div className=\"MainHeading\"> there is no Tours left .</div>\n        <button className=\"ButtonDanger\" onClick = {FetchData} aria-label =\"Get information\"> Refresh</button>\n      </>\n    )\n  }\n  else {\n    Output = (\n      <>\n        <h1 className=\"MainHeading\"> Our Tours </h1>\n        <Tours data={Data} ButtonHandler={ButtonHandler} />\n      </>\n    )\n  }\n  return (\n    <main>\n      {Output}\n    </main>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}